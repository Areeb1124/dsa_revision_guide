class MinStack {
public:
stack<int> mainStack;
stack<int> minStack;
long long minVal=LLONG_MAX;
    MinStack() {
        
    }
    
    void push(int val) {
        if(mainStack.empty() && minStack.empty()){
            mainStack.push(val);
            minStack.push(val);
            
        }
        else{
            mainStack.push(val);
            int minSoFar=minStack.top();
            if(val<minSoFar){
                minStack.push(val);
            }else{
            minStack.push(minSoFar);
            }
        }

        
    }
    
    void pop() {
        if(mainStack.empty()&&minStack.empty()){
            return ;
        }
       mainStack.pop();
       minStack.pop();
        
    }
    
    int top() {
        if(mainStack.empty()){
            return 0;
        }
        return mainStack.top();
        
    }
    
    int getMin() {
        if(minStack.empty()){
            return -1;
        }
        return minStack.top();
        
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */

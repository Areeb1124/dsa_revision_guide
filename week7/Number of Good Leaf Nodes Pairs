class Solution {
public:
 vector<int>dfs(TreeNode* root,int distance,int &ans){
    if(root == NULL){
        return {};
    }
    if(!root->left && !root->right){
        return {1};
    }
    vector<int>left=dfs(root->left,distance,ans);
    vector<int>right=dfs(root->right,distance,ans);
    for(int l:left){
        for(int r:right){
            if(l+r<=distance){
                ans++;
            }
        }
    }
    vector<int>ret;
        for(int l:left){
            if(l+1<distance){
                ret.push_back(l+1);
            }
        }
        for(int r:right){
            if(r+1<distance){
                ret.push_back(r+1);
            }
        }
        return ret;
 }
    int countPairs(TreeNode* root, int distance) {
        int ans=0;
        dfs(root,distance,ans);
        return ans;
    }
};

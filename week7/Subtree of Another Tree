class Solution {
public:
    bool isIdentical(TreeNode* root1,TreeNode* root2){
        if(root1==NULL && root2==NULL){
            return true;
        }else if(root1==NULL||root2==NULL){
            return false;
        }
        if(root1->val != root2->val){
              return false;
        }
         return isIdentical(root1->left,root2->left) && isIdentical(root1->right,root2->right);
              
    } 
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root==NULL && subRoot==NULL){
            return true;
        }else if(root==NULL||subRoot==NULL){
            return false;
        }
        if(root->val==subRoot->val){
           if(isIdentical(root,subRoot))  {
            return true;
           }
        }
        return isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot);
    }
};

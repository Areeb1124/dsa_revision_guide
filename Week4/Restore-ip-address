class Solution {
public:
vector<string> result;
bool check(string s){

    if(s.empty()||s.length()>3){
        return false;
    }
    if(s.length() == 1){
        return true;
    }
    if(s[0] == '0'){
        return false;
    }
    if(s.length() == 2){
        return true;
    }
    if(s[0]>'2'){
        return false;
    }
    if(s[0]=='2' && s[1]>'5'){
        return false;
    }
    if(s[0]=='2' && s[1]=='5' && s[2]>'5'){
        return false;
    }
    return true;
}
   void solve(string& s,int index,int dot,string path){
          if(dot == 3){
          string lastPart=s.substr(index);
          if(check(lastPart)){
            result.push_back(path+lastPart);
          }
          return;
          }
          for(int len=1;len<=3;len++){
            if(index+len>s.length()){
                break;
            }
            string part=s.substr(index,len);
               if(check(part)){
                solve(s,index+len,dot+1,path+part+'.');

            }
          }
    
   }
    vector<string> restoreIpAddresses(string s) {
        result.clear();
        int n=s.length();
         if(n<4 || n>12){
            return result;
         } 
         solve(s,0,0,"");
        return result;
    }
};
